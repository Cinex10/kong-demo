version: '3'

services:
{% if not assume_kong_running %}
  # Kong database
  kong-database:
    image: postgres:13
    container_name: kong-database
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    volumes:
      - kong-database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Kong migration service  
  kong-migration:
    image: kong:3.4.0
    container_name: kong-migration
    depends_on:
      - kong-database
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
    command: "kong migrations bootstrap"
    restart: on-failure

  # Kong Gateway
  kong:
    image: kong:3.4.0
    container_name: kong
    restart: always
    depends_on:
      - kong-database
      - kong-migration
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000" # Proxy
      - "8443:8443" # Proxy SSL
      - "8001:8001" # Admin API
      - "8444:8444" # Admin API SSL
      - "8002:8002" # Admin GUI
      - "8445:8445" # Admin GUI SSL
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
{% endif %}

{% set unique_services = {} %}
{% for service in config.services %}
{% set _ = unique_services.update({service.name: service}) %}
{% endfor %}

{% for service_name, service in unique_services.items() %}
  # {{ service_name }} mock API service
  {{ service_name }}:
    build: ./mock-apis/{{ service_name }}
    container_name: {{ service_name }}
    restart: always
    networks:
      - kong-net
    ports:
      - "8080"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
{% endfor %}

{% if config.plugins %}
{% for plugin in config.plugins %}
{% if plugin.name == "http-log" and plugin.config.http_endpoint %}
  # HTTP Log collector service
  logger:
    image: mendhak/http-https-echo:30
    container_name: logger
    restart: always
    networks:
      - kong-net
    ports:
      - "3000:3000"
{% endif %}
{% endfor %}
{% endif %}

networks:
  kong-net:
    driver: bridge

{% if not assume_kong_running %}
volumes:
  kong-database-data:
{% endif %}