version: '3'

services:
  # Kong Database
  kong-database:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    volumes:
      - kong_data:/var/lib/postgresql/data
    restart: always
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Kong Migration Service
  kong-migration:
    image: kong:3.4.0
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    depends_on:
      - kong-database
    networks:
      - kong-net
    restart: on-failure

  # Kong Gateway with Admin UI
  kong:
    image: kong:3.4.0
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
      KONG_ADMIN_GUI_API_URL: http://localhost:8001
      KONG_ENFORCE_RBAC: "off"
      KONG_ADMIN_GUI_AUTH: none
      KONG_ADMIN_GUI_FLAGS: "*"
    depends_on:
      - kong-database
      - kong-migration
    ports:
      - "8000:8000"  # Kong proxy
      - "8443:8443"  # Kong proxy SSL
      - "8001:8001"  # Kong admin API
      - "8444:8444"  # Kong admin API SSL
      - "8002:8002"  # Kong Manager (Admin UI)
    networks:
      - kong-net
    restart: always
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10

{% for service in config.services %}
  # {{ service.name }} service
  {{ service.name }}:
    build: ./mock-apis/{{ service.name }}
    networks:
      - kong-net
    restart: always
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 3
{% endfor %}

networks:
  kong-net:
    driver: bridge

volumes:
  kong_data: