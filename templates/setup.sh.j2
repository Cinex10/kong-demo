#!/bin/bash
#
# Setup script for {{ project_name }}
# This script sets up the Kong demo environment with mock APIs{% if not assume_kong_running %} and Kong Gateway{% endif %}
#

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$DIR"

echo "Setting up {{ project_name }} environment..."
echo "============================================="

# Check Docker is running
if ! docker info > /dev/null 2>&1; then
  echo "Error: Docker is not running. Please start Docker and try again."
  exit 1
fi

{% if assume_kong_running %}
# Check if Kong is accessible
echo "Checking Kong Gateway connectivity..."
if ! curl -s http://localhost:8001/status > /dev/null 2>&1; then
  echo "Warning: Cannot connect to Kong Gateway Admin API at http://localhost:8001"
  echo "Make sure Kong is running and the Admin API is accessible"
else
  echo "Kong Gateway is accessible"
fi
{% endif %}

echo "Starting containers..."
docker-compose up -d

echo "Waiting for services to start..."
sleep 5

{% if not assume_kong_running %}
# Check if Kong is running
if ! docker-compose ps kong | grep -q Up; then
  echo "Error: Kong Gateway failed to start. Check docker-compose logs."
  exit 1
fi
echo "Kong Gateway is running"

# Configure Kong (wait for it to be ready)
echo "Waiting for Kong to be ready..."
while ! curl -s http://localhost:8001/status > /dev/null 2>&1; do
  echo "Waiting for Kong Admin API..."
  sleep 3
done

echo "Configuring Kong Gateway..."
{% for service in config.services %}
echo "Creating service: {{ service.name }}"
SERVICE_ID=$(curl -s -X POST http://localhost:8001/services \
  -d name={{ service.name }} \
  -d url=http://{{ service.name }}:8080 | jq -r '.id')

{% for route in config.routes %}
{% if route.service_name == service.name %}
echo "Creating route: {{ route.name }}"
ROUTE_ID=$(curl -s -X POST http://localhost:8001/services/{{ service.name }}/routes \
  -d name={{ route.name }} \
  -d 'paths[]={{ route.paths[0] }}' | jq -r '.id')
{% endif %}
{% endfor %}
{% endfor %}

{% for plugin in config.plugins %}
echo "Creating plugin: {{ plugin.name }}"
{% if plugin.config %}
PLUGIN_ID=$(curl -s -X POST http://localhost:8001/plugins \
  -d name={{ plugin.name }} \
  -d 'config={{ plugin.config | tojson | replace("\"", "\\\"") }}' | jq -r '.id')
{% else %}
PLUGIN_ID=$(curl -s -X POST http://localhost:8001/plugins \
  -d name={{ plugin.name }} | jq -r '.id')
{% endif %}
{% endfor %}

{% for consumer in config.consumers %}
echo "Creating consumer: {{ consumer.username }}"
CONSUMER_ID=$(curl -s -X POST http://localhost:8001/consumers \
  -d username={{ consumer.username }} | jq -r '.id')

{% if consumer.auth_type == "key-auth" %}
echo "Creating key-auth for {{ consumer.username }}"
KEY_ID=$(curl -s -X POST http://localhost:8001/consumers/{{ consumer.username }}/key-auth \
  -d key=demo-key-{{ consumer.username }} | jq -r '.id')
{% endif %}
{% endfor %}
{% else %}
echo "Kong Gateway is assumed to be running separately"
echo "To deploy configuration to Kong, run: ./deploy-to-kong.sh"
{% endif %}

echo "============================================="
echo "Setup complete!"
echo ""
echo "You can access the following services:"
{% if not assume_kong_running %}
echo "- Kong Admin API: http://localhost:8001"
echo "- Kong Admin GUI: http://localhost:8002"
echo "- Kong Proxy: http://localhost:8000"
{% endif %}
{% for service in config.services %}
{% for route in config.routes %}
{% if route.service_name == service.name %}
echo "- {{ service.name }}: http://localhost:8000{{ route.paths[0] }}"
{% endif %}
{% endfor %}
{% endfor %}
echo ""
echo "To test the APIs, run: ./test-api.sh"
{% if assume_kong_running %}
echo "To deploy to Kong, run: ./deploy-to-kong.sh"
{% endif %}
echo "To shut down the environment, run: docker-compose down"